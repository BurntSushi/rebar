analysis = '''
These regexes were taken from the [Ruff project][ruff-project]. Ruff is
a Python linter in Rust that claims to be quite fast. I took a quick
skim at one point and was interested to see that it [makes heavy use of
regexes][ruff-issue-2901].

While it's not clear how sensitive the performance of Ruff is to the speed of
the individual regexes, it seemed like a nice place to pluck out some real
world regexes to benchmark. I didn't take all of them, but I picked through a
few that looked "interesting." For example, I skipped most anchored regexes
and most regexes that had some obvious literal prefixes.

Interestingly, many regex engines don't run well on the haystack because it
contains invalid UTF-8 *and* Ruff keeps Unicode mode enabled on its regexes.
Many regex engines require valid UTF-8 when Unicode mode is enabled. (I'm
looking at you, Python and Hyperscan.) And some regex engines (regress)
require valid UTF-8 regardless of whether Unicode mode is enabled or not.

[ruff-project]: https://github.com/charliermarsh/ruff
[ruff-issue-2901]: https://github.com/charliermarsh/ruff/issues/2901
'''

[[bench]]
model = 'grep-captures'
name = 'whitespace-around-keywords'
regex = '(\s*)\b(?:False|None|True|and|as|assert|async|await|break|class|continue|def|del|elif|else|except|finally|for|from|global|if|import|in|is|lambda|nonlocal|not|or|pass|raise|return|try|while|with|yield)\b(\s*)'
unicode = true
haystack = { path = 'wild/cpython-226484e4.py' }
count = 1_312_482
engines = [
  'pcre2/jit',
  'rust/regex',
  'rust/regex/meta',
  'rust/regexold',
]


[[bench]]
model = 'grep-captures'
name = 'noqa'
regex = '(?P<spaces>\s*)(?P<noqa>(?i:# noqa)(?::\s?(?P<codes>([A-Z]+[0-9]+(?:[,\s]+)?)+))?)'
unicode = true
haystack = { path = 'wild/cpython-226484e4.py' }
count = 84
engines = [
  'pcre2/jit',
  're2',
  'rust/regex',
  'rust/regex/meta',
  'rust/regexold',
]

[[bench]]
model = 'grep'
name = 'unnecessary-coding-comment'
regex = '^[ \t\f]*#.*?coding[:=][ \t]*utf-?8'
unicode = true
haystack = { path = 'wild/cpython-226484e4.py' }
count = 16
engines = [
  'pcre2/jit',
  're2',
  'rust/regex',
  'rust/regex/meta',
  'rust/regexold',
]

[[bench]]
model = 'grep-captures'
name = 'string-quote-prefix'
regex = '''^(?i)[urb]*['"](?P<raw>.*)['"]$'''
unicode = true
haystack = { path = 'wild/cpython-226484e4.py' }
count = 2972
engines = [
  'pcre2/jit',
  're2',
  'rust/regex',
  'rust/regex/meta',
  'rust/regexold',
]

[[bench]]
model = 'grep-captures'
name = 'space-around-operator'
regex = '[^,\s](\s*)(?:[-+*/|!<=>%&^]+|:=)(\s*)'
unicode = true
haystack = { path = 'wild/cpython-226484e4.py' }
count = 1_224_378
engines = [
  'pcre2/jit',
  're2',
  'rust/regex',
  'rust/regex/meta',
  'rust/regexold',
]


[[bench]]
model = 'grep-captures'
name = 'shebang'
regex = '^(?P<spaces>\s*)#!(?P<directive>.*)'
unicode = true
haystack = { path = 'wild/cpython-226484e4.py' }
count = 282
engines = [
  'pcre2/jit',
  're2',
  'rust/regex',
  'rust/regex/meta',
  'rust/regexold',
]
