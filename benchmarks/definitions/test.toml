analysis = '''
This is a collection of benchmarks that are generally meant to test aspects of
functionality of regex engines, and less to measure how fast they are.
'''

[[bench]]
model = "count"
name = "all"
regex = '[a-z][a-z][a-z][a-z][a-z]'
haystack = { contents = "then as it was, then again it will be" }
count = 1
engines = [
  'rust/regex',
  'rust/regexold',
  'rust/regex/meta',
  'rust/regex/dense',
  'rust/regex/sparse',
  'rust/regex/hybrid',
  'rust/regex/backtrack',
  'rust/regex/pikevm',
  'regress',
  'pcre2',
  'pcre2/jit',
  're2',
  'go/regexp',
  'python/re',
  'python/regex',
  'hyperscan',
]
analysis = '''
This benchmark is a way to test the most basic capabilities of probably almost
any regex engine worth benchmarking. It doesn't even use a bounded repetition
operator. Just a simple manual repetition with exactly one possible match.
'''
